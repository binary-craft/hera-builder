name: Build and push
on:
  push:
    branches: [main]
    paths-ignore: ['**.md', '.gitignore', 'LICENSE']
  workflow_dispatch:
env:
  BUILDER_IMAGE: ${{ vars.DOCKER_NAMESPACE }}/hera-builder:jammy
  PACK_VERSION: ${{ vars.PACK_VERSION }}

jobs:
  build-and-push:
    name: Build and push
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: [self-hosted, macOS]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Set up pack
        run: bash scripts/setup-pack.sh

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create builder ${{ env.BUILDER_IMAGE }}-${{ matrix.arch }}
        run: pack builder create ${{ env.BUILDER_IMAGE }}-${{ matrix.arch }} --config ./builder.toml

      - name: Inspect built image
        run: docker inspect ${{ env.BUILDER_IMAGE }}-${{ matrix.arch }}

      - name: Push builder ${{ env.BUILDER_IMAGE }}-${{ matrix.arch }} to Docker hub
        run: docker push ${{ env.BUILDER_IMAGE }}-${{ matrix.arch }}

  create-manifest:
    name: Create manifest
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create manifest ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }}
        run: docker manifest create ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }} ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }}-amd64 ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }}-arm64

      - name: Inspect manifest
        run: docker manifest inspect ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }}

      - name: Push manifest ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }} to Docker hub
        run: docker manifest push ${{ vars.DOCKER_HOST }}/${{ env.BUILDER_IMAGE }}
