name: Build
on:
  push:
    paths-ignore: ['**.md', '.gitignore', 'LICENSE']
  workflow_dispatch:

jobs:
  build:
    name: Build
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: [self-hosted, macOS]
    runs-on: ${{ matrix.runner }}
    env:
      BUILDER_NAME: hera-builder
      BUILDER_VERSION: jammy-${{ matrix.arch }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      #- uses: docker/setup-qemu-action@v3
      #  with:
      #    platforms: linux/${{ matrix.arch }}

      #- uses: docker/setup-buildx-action@v3
      #  with:
      #    platforms: linux/${{ matrix.arch }}

      #- name: Set up pack
      #  uses: buildpacks/github-actions/setup-pack@v5.5.1

      - name: Set up pack
        run: |
          #!/usr/bin/env bash
          
          set -euo pipefail
          
          mkdir -p "${HOME}"/bin
          echo "PATH=${HOME}/bin:${PATH}" >> "${GITHUB_ENV}"
          
          if [ $(os) = "macOS" ]; then
             PLATFORM="macos"
          else
            PLATFORM="linux"
          fi
          if [ $(arch) = "aarch64" ]; then
             PLATFORM="${PLATFORM}-arm64"
          fi
          
          PACK_VERSION="0.32.1"
          echo "Installing pack ${PACK_VERSION}"
          curl \
            --show-error \
            --silent \
            --location \
            --fail \
            --retry 3 \
            --connect-timeout 5 \
            --max-time 60 \
            "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-${PLATFORM}.tgz" \
          | tar -C "${HOME}/bin" -xz pack
          

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create builder ${{ vars.DOCKER_NAMESPACE }}/${{ env.BUILDER_NAME }}:${{ env.BUILDER_VERSION }}
        run: pack builder create ${{ vars.DOCKER_NAMESPACE }}/${{ env.BUILDER_NAME }}:${{ env.BUILDER_VERSION }} --config ./builder.toml

      - name: Inspect built image
        run: docker inspect ${{ vars.DOCKER_NAMESPACE }}/${{ env.BUILDER_NAME }}:${{ env.BUILDER_VERSION }}

      #- name: Push builder ${{ vars.DOCKER_NAMESPACE }}/${{ env.BUILDER_NAME }}:${{ env.BUILDER_VERSION }} to Docker hub
      #  run: docker push ${{ vars.DOCKER_NAMESPACE }}/${{ env.BUILDER_NAME }}:${{ env.BUILDER_VERSION }}
